name: Docker Build and Publish

on:
  push:
    branches: ["main"]
    tags: ["v*.*.*"]
  pull_request:
    branches: ["main"]

env:
  REGISTRY: docker.io
  IMAGE_NAME: tupe12334/sec

jobs:
  build:
    runs-on: ubuntu-latest
    environment: CI
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Read package.json version
        id: package-version
        run: |
          VERSION=$(node -p "require('./server/package.json').version")
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Check existing version
        id: check-version
        if: github.event_name != 'pull_request'
        run: |
          EXISTS=$(docker manifest inspect ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.package-version.outputs.version }} > /dev/null 2>&1 && echo "true" || echo "false")
          echo "exists=$EXISTS" >> $GITHUB_OUTPUT

          # Get latest version from Docker Hub
          LATEST_VERSION=$(curl -s "https://registry.hub.docker.com/v2/repositories/${{ env.IMAGE_NAME }}/tags" | jq -r '.results[].name' | grep -E '^[0-9]+\.[0-9]+\.[0-9]+$' | sort -V | tail -n1 || echo "0.0.0")
          echo "latest_version=$LATEST_VERSION" >> $GITHUB_OUTPUT

          # Compare versions
          if [ "$(printf '%s\n' "$LATEST_VERSION" "${{ steps.package-version.outputs.version }}" | sort -V | tail -n1)" = "${{ steps.package-version.outputs.version }}" ]; then
            echo "is_newer=true" >> $GITHUB_OUTPUT
          else
            echo "is_newer=false" >> $GITHUB_OUTPUT
          fi

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log into Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: tupe12334
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=raw,value=${{ steps.package-version.outputs.version }}
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha
            type=raw,value=latest,enable=${{ steps.check-version.outputs.is_newer == 'true' }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./server
          push: ${{ github.event_name != 'pull_request' && steps.check-version.outputs.exists != 'true' }}
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
